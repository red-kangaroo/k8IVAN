Dungeon MUNTUO;
{
  Levels = 2;

  Level 0;
  {
    LevelMessage = "You descend into a clearing full of tame animals.";
    Description = "Muntuo, the Fastness of Solicitus";
    ShortDescription = "Muntuo";
    FillSquare = solidterrain(GRASS_TERRAIN), 0;
    Size = 50, 42;
    GenerateMonsters = false;
    Rooms = 1;
    Items = 0;
    IsOnGround = true;
    TeamDefault = SOLICITUS_TEAM;
    LOSModifier = 48;
    IgnoreDefaultSpecialSquares = false;
    CanGenerateBone = false;
    DifficultyBase = 50;
    DifficultyDelta = 0;
    EnchantmentMinusChanceBase = -15;
    EnchantmentMinusChanceDelta = 0;
    EnchantmentPlusChanceBase = 0;
    EnchantmentPlusChanceDelta = 0;
    BackGroundType = GREEN_FRACTAL;
    EarthquakesAffectTunnels = false;

    RoomDefault
    {
      Pos = 2:36,2:36;
      Size = 4:6,4:6;
      AltarPossible = false;
      WallSquare = solidterrain(GRASS_TERRAIN), wall(BRICK_OLD);
      FloorSquare = MARBLE solidterrain(PARQUET), 0;
      DoorSquare = solidterrain(GRASS_TERRAIN), BALSA_WOOD door;
      GenerateDoor = false;
      DivineMaster = 0;
      GenerateTunnel = false;
      GenerateLanterns = false;
      Type = ROOM_NORMAL;
      GenerateFountains = false;
      AllowLockedDoors = false;
      AllowBoobyTrappedDoors = false;
      Shape = RECTANGLE;
      IsInside = true;
      GenerateWindows = false;
      UseFillSquareWalls = false;
      Flags = 0;
      GenerateWards = false;
    }

    Room
    {
      Type = ROOM_NORMAL;
      Pos = 4,5;
      Size = 42,16;
      WallSquare = solidterrain(GRASS_TERRAIN), TIN wall(BRICK_OLD);
      FloorSquare = LIME_STONE solidterrain(PARQUET), 0;
      GenerateDoor = false;
      DivineMaster = LEGIFER;
      GenerateLanterns = false;
      GenerateWindows = false;

      OTerrainMap
      {
        Pos = 0,0;
        Size = 42,16;
        Types
        {
          _ = 0;
          # = 0;
          $ = TIN wall(BRICK_OLD);
          ^ = decoration(HOLY_TREE);
          c = decoration(COUCH);
          d = OAK_WOOD door;
          f = fountain { SecondaryMaterial = LIQUID_HORROR; }
        }
      }
      {
        ##########################################
        #................$$$$$$$$................#
        #................$$$$$$$$................#
        #.................$$..$$.................#
        #................$$$..$$$................#
        #.$$$$$.........$$$....$$$.........$$$$$.#
        #$$...$$......$$$........$$$......$$...$$#
        #$.....$....$$$............$$$....$.....$#
        #$..f..$$$$$$................$$$$$$.....$#
        #.......$$$$..................$$$$.......#
        #........$$....................$$........#
        #........................................#
        #$.......$$....................$$.......$#
        #$$.....$$$....................$$$.....$$#
        #.$$$..$$.$$..................$$.$$..$$$.#
        ####################dd####################
      }

      CharacterMap
      {
        Pos = 0,0;
        Size = 42,16;
        Types
        {
          # = 0;
          g = guard(SENTINEL) { Team = SOLICITUS_TEAM; }
          S = solicitus{ Team = SOLICITUS_TEAM; Flags = IS_MASTER; }
          A = insudo { Team = SOLICITUS_TEAM; }
          P = priest(SOLICITU) { Team = SOLICITUS_TEAM; }
          /*X = morbe { Team = MORBE_TEAM; }*/
        }
      }
      {
        ##########################################
        #................########................#
        #................########................#
        #.................##S.##.................#
        #................###..###................#
        #.#####.........###....###.........#####.#
        ###...##......###.g....g.###......##...###
        ##.....#....###.....P......###....#.....##
        ##.....######................######..A..##
        #.......####..................####.......#
        #.......g##....................##g.......#
        #........................................#
        ##......g##....................##g......##
        ###.....###....................###.....###
        #.###..##.##......g....g......##.##..###.#
        ####################..####################
      }

      GTerrainMap
      {
        Pos = 0,0;
        Size = 42,16;
        Types
        {
          # = LIME_STONE solidterrain(FLOOR);
          _ = LIME_STONE solidterrain(FLOOR);
          - = OAK_WOOD solidterrain(PARQUET);
        }
      }
      {
        ##########################################
        #................########................#
        #................########................#
        #.................##__##.................#
        #................###__###................#
        #.#####.........###____###.........#####.#
        ###___##......###________###......##___###
        ##_____#....###____________###....#_____##
        ##_____######________________######_____##
        #_______####__________________####_______#
        #________##____________________##________#
        #________________________________________#
        ##_______##____________________##_______##
        ###_____###____________________###_____###
        #.###__##.##__________________##.##__###.#
        ####################--####################
      }

      ItemMap
      {
        Pos = 0,0;
        Size = 42,16;
        Types
        {
          # == 0;
          _ == 0;
          2 == lantern { SquarePosition = DOWN; }
          3 == lantern { SquarePosition = RIGHT; }
          4 == lantern { SquarePosition = LEFT; }
          5 == lantern { SquarePosition = UP; }
          /*E == EMERALD OCTIRON eptyron { Enchantment = 5; LifeExpectancy = 2000:5000;} */
          /*f == GLASS LIQUID_HORROR potion;*/
          /*v == GLASS VINEGAR potion;*/
          /*C == COPPER OMMEL_BLOOD cauldron;*/
          /*e == COPPER WATER cauldron;*/
          /*t == taiaha;*/
        }
      }
      {
        ##########################################
        #................########................#
        #................########................#
        #.................##..##.................#
        #................###..###................#
        #.##2##.........###....###.........##2##.#
        ###...##......###........###......##...###
        ##.....#....###............###....#.....##
        ##.....######................######.....##
        #.......####..................####.......#
        3........##....................##........4
        #........................................#
        ##.......#3....................4#.......##
        ###.....###....................###.....###
        #.##5..##.##..................##.##..5##.#
        #################5##..##5#################
      }
    }

    Square, Random NOT_IN_ROOM|HAS_NO_OTERRAIN;
    {
      OTerrain = decoration(BIRCH);
      Times = 50;
    }

    Square, Random NOT_IN_ROOM;
    {
      Character = mouse(FIELD_MOUSE) { Team = SOLICITUS_TEAM; }
    }

    Square, Random NOT_IN_ROOM;
    {
      Character = carnivorousplant { Team = SOLICITUS_TEAM; }
      Times = 9:18;
    }

    Square, Random NOT_IN_ROOM;
    {
      Character = carnivorousplant(GREATER) { Team = SOLICITUS_TEAM; }
      Times = 3:6;
    }

    Square, Random NOT_IN_ROOM;
    {
      Character = carnivorousplant(GIANTIC) { Team = SOLICITUS_TEAM; }
      Times = 1:2;
    }

    Square, Random NOT_IN_ROOM;
    {
      Character = okapi { Team = SOLICITUS_TEAM; }
    }

    Square, Random NOT_IN_ROOM;
    {
      Character = firefox { Team = SOLICITUS_TEAM; }
    }

    Square, Pos 25, 41;
    {
      EntryIndex = STAIRS_UP;
    }
  }
}
